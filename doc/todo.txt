[x] add session log file
[x] start at entrypoint option
[x] integrate docker debugging
[x] add register view buffer and update with step
[x] add source for os-specific test binaries
[x] establish if symbols file found from starup
[x] fix session log when run command run multiple times in one call - eg Vgrte
[x] add a session log view buffer and update with step
[x] add vim startup variables - start and connect, start and run to entrypoint (must specify binary)
[x] add option to run command before startup of vgdb - eg. docker container with gdbserver
[ ] make buffers non-modifiable by user
[ ] format disassembly output for debug and match step output to current line (with highlight)
[ ] add highlight for changed register values between operations
[ ] use register to write to buffer instead of append() (like NerdTree)
[x] add tests using [vimrunner](https://github.com/AndrewRadev/vimrunner) and add to as required
    [ ] add variable height windows
    [ ] add gdb error/warning buffer view and update with step
    [ ] add local variables view buffer and update with step
[x] add breakpoints view buffer and update with step
    [ ] add watchpoints view buffer and update with step
[x] add fix for macos using Vgrte: https://stackoverflow.com/questions/40110435/unknown-ending-signal-when-using-debugger-gdb - done - https://stackoverflow.com/a/52450255/512965
[x] add option for stacking/abutting extra windows
[ ] add memory view buffers and update with step (requires variables for number, format, variable/register, etc.)
[ ] add option to only update registers and memory buffers when relevant commands have been run (step, stepi, continue, run, etc.)
[ ] make stacking/abutting buffer-specific
[x] detect symbols in files
    [ ] add max windows per column - e.g. 4 windows down before starting a new column of buffers
[x] add open buffers at startup option
[x] find empty buffer for loading source code
    [ ] add ability to scan for all source files for a binary
    [ ] add ability to list all source files as tabs or using NerdTree
    [ ] add editable settings screen buffer
    [ ] add highlight for changed memory values between operations
[x] split window handling into separate autoload vim file
[x] add disassembly output buffer ( add to empty buffer or abutt)
[ ] use vim event loop for `BufUnload` when closing `vg_` buffers to prevent using bwipeout when fetching data (https://www.ibm.com/developerworks/library/l-vim-script-5/index.html)
[ ] add a status view buffer and update with step (to show os, bitness, target, target status, entrypoint address)
[ ] add segments view buffer ( no update with step)
[ ] add sections view buffer ( no update with step)
[ ] add call stack view buffer and update with step (only if symbols loaded)
[ ] add thread view buffer and update with step
[ ] add debugging source functionality and open source files if present (start with .s files)
[ ] add shortcut keys for debugging
[ ] add custom vg_ buffer name, filter, command, abutt/stack/empty feature
[ ] add a configurable YAML template for different uses
[ ] add edit register values functionality
[ ] add edit memory values functionality
[ ] add edit variable values functionality
[ ] add documentation
[x] refactor py vgdb into separate classes
[ ] create extensible subsystem for interpreting mi
[ ] add gdb supported higher level languages support
[ ] add goto definition functionality
[ ] add interpreted languages support where possible
[ ] add scripting plugin support
[ ] add llvm support

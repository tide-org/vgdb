[ ] allow plugins from more than one path location - eg - base, plugins(common), plugins(specific) - sort of like Magento
[ ] implement multiple variable matches per command - eg backtrace - gives number but want a variable for error condition
[ ] allow plugins from different languages - e.g. python, ruby, C, elixir, scala, .net, etc.
[ ] fix failing tests
[ ] create more tests
[ ] have ability to have end_of_output_regex on a per-command level (would overwrite default) - e.g. for ssh login etc.
[ ] allow specifying actions from a config plugins path
[ ] fix vg_registers in docker container - need to split on "\n", not \r but join lines and remove start and end ~ quotations
[ ] create tests for config_command buffers, actions and events
[ ] add the abillity to scroll buffer to keep current breakpoint/highlight line visible - use vim :g - follow breakpoint option
[ ] add ability to set a breakpoint/piet from the current line of code/disassembly
[ ] add shortcut keys for debugging - to config
[ ] add a timer refresh config option - useful for streaming logs and sampling
[ ] use async functions for events (if necessary)
[ ] standardise all editor-specific calls from python to use the editor_wrapper (e.g. actions/set_buffer)
[ ] add the ability to patch up disassemblies to a single buffer when switching to range - maybe sort list as well
[ ] allow list_breakpoints command to be run before disassembly in config - currently displays depending on order - requires investigating buffer cache order and precedence
[ ] add the option of adding a name: key to commands (like ansible)
[ ] implement command on startup log file (use pexpect)
[ ] make stacking/abutting buffer-specific
[ ] add window affinity for buffer breaks - e.g. top. bottom, left, right, top-left, etc.
[ ] add max windows per column - e.g. 4 windows down before starting a new column of buffers - (or add a buffer grouping field to the config with settings)
[ ] add goto definition functionality
[ ] add interpreted languages support where possible
[ ] add llvm support
[ ] add other process support (e.g. ssh, terminals, log streams, etc)
[ ] allow different configs to be called from vim command line
[ ] componentise python config to allow use on multiple editors
[ ] update/create readme.md file
[ ] create a product website
[ ] promote it as an app
